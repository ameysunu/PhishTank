name: Build and Release macOS DMG

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: "Release Name"
        required: true
        default: "New Release"
      release_description:
        description: "Description"
        required: false
        default: "Description of the release"
      release_tag:
        description: "The tag for the release"
        required: true
        default: "v1.0.0"

jobs:
  build:
    runs-on: macos-15
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Decode and Save Info.plist
        env:
          ENCODED_INFO_PLIST: ${{ secrets.ENCODED_INFO_PLIST }}
          ENCODED_GOOGLESERVICE_PLIST: ${{ secrets.ENCODED_GOOGLESERVICE_PLIST }}
          ENCODED_SECRETS_PLIST: ${{ secrets.ENCODED_SECRETS_PLIST }}
        run: |
          echo "$ENCODED_INFO_PLIST" | base64 --decode > ${{ vars.SCHEME_NAME }}/Info.plist
          echo "$ENCODED_GOOGLESERVICE_PLIST" | base64 --decode > ${{ vars.SCHEME_NAME }}/GoogleService-Info.plist
          echo "$ENCODED_SECRETS_PLIST" | base64 --decode > ${{ vars.SCHEME_NAME }}/Secrets.plist

      - name: Build
        run: |
          xcodebuild -scheme ${{ vars.SCHEME_NAME }} -project ${{ vars.XCODEPROJ }} -configuration Release -derivedDataPath ./build CODE_SIGNING_ALLOWED=NO

      - name: Create DMG
        run: |
          mkdir -p dist
          hdiutil create -volname ${{ vars.SCHEME_NAME }} -srcfolder build/Build/Products/Release/${{ vars.SCHEME_NAME }}.app -ov -format UDZO "dist/${{ vars.SCHEME_NAME }}.dmg"

      - name: Upload DMG as artifact
        uses: actions/upload-artifact@v3
        with:
          name: "${{ vars.SCHEME_NAME }}.dmg"
          path: dist/${{ vars.SCHEME_NAME }}.dmg
        
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.event.inputs.release_tag }} \
            --title "${{ github.event.inputs.release_name }}" \
            --notes "${{ github.event.inputs.release_description }}" \
            || echo "Release already exists."

      - name: Upload artifact to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.inputs.release_tag }} "dist/${{ vars.SCHEME_NAME }}.dmg" --clobber
          
